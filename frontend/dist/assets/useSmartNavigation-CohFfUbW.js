import{G as p,m as c,M as R,s as w,C as A}from"./index-C20tTf3S.js";const N={MATIERE_DEPENDENT:["Exercises","Quiz","Sheets","OnlineCourses"],MATIERE_ENHANCED:["Dashboard","Account","Progress"]},$=()=>{const v=A(),i=R(),r=p();typeof r.initialize=="function"&&r.initialize().catch(console.error);const u=c(()=>N.MATIERE_DEPENDENT.includes(i.name)),h=c(()=>N.MATIERE_ENHANCED.includes(i.name)||u.value),l=c(()=>i.params.matiereId||i.query.matiereId||null),f=c(()=>r.activeMatiereId||r.selectedMatieresIds.length>0),n=(e,a)=>{console.error(`[SmartNavigation] Erreur dans ${a}:`,e)},d=e=>e!=null&&!isNaN(Number(e))&&Number(e)>0,g=async(e,a=null)=>{try{console.log(`[SmartNavigation] navigateToSectionWithMatiere appelée pour: ${e}`);let t=a||r.activeMatiereId;if(t||(t=await r.getOrSetSmartActiveMatiere(r.selectedMatieresIds)),typeof t=="string"&&(t=Number(t)),console.log(`[SmartNavigation] Matière déterminée: ${t}`),console.log("[SmartNavigation] Store state:",{activeMatiereId:r.activeMatiereId,selectedMatieresIds:r.selectedMatieresIds}),!d(t)){console.warn(`[SmartNavigation] Aucune matière valide disponible pour ${e}`),await S(e);return}console.log(`[SmartNavigation] Définition de la matière active: ${t}`),r.setActiveMatiere(t);const o=m(e,t);if(console.log("[SmartNavigation] Configuration de route:",o),!o){console.warn(`[SmartNavigation] Configuration de route introuvable pour ${e}`);return}console.log("[SmartNavigation] Tentative de navigation vers:",o),await v.push(o),console.log(`[SmartNavigation] Navigation réussie vers ${e} avec matière ${t}`)}catch(t){throw n(t,"navigateToSectionWithMatiere"),t}},m=(e,a)=>{const o={exercises:s=>({name:"Notions",params:{matiereId:s}}),quiz:s=>({name:"QuizNotions",params:{matiereId:s}}),sheets:s=>({name:"Sheets",query:{matiereId:s}})}[e.toLowerCase()];return o?o(a):null},S=async e=>{try{const t={exercises:"Exercises",quiz:"Quiz",sheets:"Sheets"}[e.toLowerCase()]||"Dashboard";console.log(`[SmartNavigation] Redirection vers sélection de matière: ${t}`),await v.push({name:t}),console.log(`[SmartNavigation] Redirection réussie vers: ${t}`)}catch(a){throw n(a,"redirectToMatiereSelection"),a}},E=async e=>{try{console.log(`[SmartNavigation] Début navigation pour: ${e}`);const t={exercices:"exercises",quiz:"quiz",fiches:"sheets"}[e];if(!t){console.warn(`[SmartNavigation] Section inconnue: ${e}`);return}console.log(`[SmartNavigation] Section mappée: ${e} -> ${t}`),await g(t)}catch(a){throw n(a,"handleMenuNavigation"),a}},M=()=>{try{const e=l.value;d(e)&&(r.selectedMatieresIds.includes(Number(e))||r.addMatiereId(e),r.setActiveMatiere(e),console.log(`[SmartNavigation] Matière synchronisée depuis route: ${e}`))}catch(e){n(e,"syncMatiereWithRoute")}},I=async()=>{try{if(u.value&&!l.value){const e=await r.getOrSetSmartActiveMatiere(r.selectedMatieresIds);if(e){const a=i.name.toLowerCase();return await g(a,e),!0}else return console.log(`[SmartNavigation] Aucune matière disponible, restant sur ${i.name}`),!1}return!1}catch(e){return n(e,"checkAndRedirectIfNeeded"),!1}};return w(()=>i.path,()=>{M()},{immediate:!0}),{currentRouteNeedsMatiere:u,currentRouteCanUseMatiere:h,matiereIdFromRoute:l,hasAvailableMatiere:f,navigateToSectionWithMatiere:g,handleMenuNavigation:E,redirectToMatiereSelection:S,syncMatiereWithRoute:M,checkAndRedirectIfNeeded:I,getRouteForSection:m,isValidMatiereId:d}};export{$ as u};
